@{
    Layout = "_TestingLayout";
}
@model CandidateAssessments.Models.QuizQuestion





<div class="container-fluid">
    <div class="row">
        <h3 class="cold-md-12 pull-right"><span>Time Remaining: </span><span id="countdown" class="text-success">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></h3>
    </div>
    <form asp-action="Quiz">
        <input type="hidden" name="QuizQuestionId" value="@Model.QuizQuestionId" />
        <div class="form-horizontal">
            <div class="form-group">

                <div class="card">
                    <h3 class="card-header">
                        <span class="cardHeader">@Html.DisplayFor(model => model.Question.Topic.Name) </span><span class="pull-right">Question # @Html.DisplayFor(model => model.QuestionNumber)</span>
                    </h3>
                    <div class="card-block">
                        <blockquote class="card-blockquote">
                            <p class="card-text">@Html.Raw(Model.Question.QuestionText)</p>
                            <div class="list-group">
                                @if (Model.Question.QuestionType == CandidateAssessments.Models.QuestionTypes.MultipleChoice)
                                {
                                    <label class="container-fluid list-group-item" for="radio-1">
                                        <input type="radio" class="quiz-radio" name="Answer" value="A" id="radio-1" />
                                        <span class="question_label">A) </span><span class="col-md-9 question_text">@Html.Raw(Model.Question.ChoiceA)</span>
                                    </label>
                                    <label class="container-fluid list-group-item" for="radio-2">
                                        <input type="radio" class="quiz-radio" name="Answer" value="B" id="radio-2" />
                                        <span class="question_label">B) </span><span class="col-md-9 question_text">@Html.Raw(Model.Question.ChoiceB)</span>
                                    </label>
                                    <label class="container-fluid list-group-item" for="radio-3">
                                        <input type="radio" class="quiz-radio" name="Answer" value="C" id="radio-3" />
                                        <span class="question_label">C) </span><span class="col-md-9 question_text">@Html.Raw(Model.Question.ChoiceC)</span>
                                    </label>
                                    <label class="container-fluid list-group-item" for="radio-4">
                                        <input type="radio" class="quiz-radio" name="Answer" value="D" id="radio-4" />
                                        <span class="question_label">D) </span><span class="col-md-9 question_text">@Html.Raw(Model.Question.ChoiceD)</span>
                                    </label>
                                }
                                else if (Model.Question.QuestionType == CandidateAssessments.Models.QuestionTypes.TrueFalse)
                                {

                                    <label class="container-fluid list-group-item" for="radio-1">
                                        <input type="radio" class="quiz-radio" name="Answer" value="T" id="radio-1" />
                                        <span class="question_label"></span><span class="col-md-9 question_text">True</span>
                                    </label>
                                    <label class="container-fluid list-group-item" for="radio-2">
                                        <input type="radio" class="quiz-radio" name="Answer" value="F" id="radio-2" />
                                        <span class="question_label"></span><span class="col-md-9 question_text">False</span>
                                    </label>
                                }
                                else if (Model.Question.QuestionType == CandidateAssessments.Models.QuestionTypes.Essay)
                                {

                                    <textarea class="container-fluid form-control" id="fillin" name="Answer"  rows="20" type="text" ></textarea>

                                }
                                else
                                {
                                    <input class="container-fluid form-control" id="fillin" name="Answer" type="text" />

                                }
                            </div>
                        </blockquote>
                    </div>
                    <div class="dl-horizontal card-footer">
                        <span class="col-lg-1">
                            &nbsp;
                        </span>
                        <span class="col-lg-offset-10 col-lg-1">
                            <input type="submit" display="inline-block" id="AnswerSubmit" class="btn btn-default hidden" value='@(Model.NextQuestionId == 0 ? "Done" : "Next")' />
                        </span>

                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
<script>
    var dt = '@ViewBag.EndDate';
    var dateAr = dt.split('-');
    var newDate = dateAr[1] + '/' + dateAr[0] + '/' + dateAr[2];

    var end = new Date(dateAr[1] + '/' + dateAr[0] + '/' + dateAr[2]);

    var _second = 1000;
    var _minute = _second * 60;
    var _hour = _minute * 60;
    var _day = _hour * 24;
    var timer;

    function showRemaining() {
        var now = new Date();
        var distance = end - now;
        var limit = @ViewBag.TimeLimit;
        if (distance < ((limit * 60000) / 2)) {

            document.getElementById('countdown').className = "text-danger"

        }
        if (distance < 0) {
            clearInterval(timer);
            document.getElementById('countdown').innerHTML = 'EXPIRED';
            window.location.href = '/Testing/Quiz/@Model.QuizId';

            return;
        }
        var hours = Math.floor((distance % _day) / _hour);
        var minutes = Math.floor((distance % _hour) / _minute);
        var seconds = Math.floor((distance % _minute) / _second);

        if(hours>0){
            document.getElementById('countdown').innerHTML = hours + ':';
            if(minutes<10)
                document.getElementById('countdown').innerHTML += '0'+minutes + ':';
            else
                document.getElementById('countdown').innerHTML += minutes + ':';
        }else{
            document.getElementById('countdown').innerHTML = minutes + ':';

        }

        if (seconds < 10)
            document.getElementById('countdown').innerHTML += '0' + seconds;
        else
            document.getElementById('countdown').innerHTML += seconds + '';
    }

    timer = setInterval(showRemaining, 1000);

</script>