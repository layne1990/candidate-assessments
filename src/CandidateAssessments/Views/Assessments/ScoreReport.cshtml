@model CandidateAssessments.Models.Assessment

@using CandidateAssessments.Models
<style>
    @@media print{
        h2{
            text-align:center;
        }
        dl{
             text-align:center;

        }
    #print{
        display:none !important;
    }
    .reportTable th{
     border-top: none !important;
    background-color:#F2F2F2 !important;
    -webkit-print-color-adjust: exact; 
}



      
    } 
</style>
@{
    ViewData["Title"] = "Score Report";
    List<Quiz> quizzes = ViewBag.quizzes;
    quizzes = quizzes.OrderBy(x => x.TimeStarted).ToList();
    List<TopicQuestion> questions = ViewBag.questions;
    List<Double> Scores = new List<double>();
}
<span class="btn btn-primary pull-right" id="print"  style="margin-top:20px; "onclick="window.print();return false;">Print Report</span>
<h2  class="col-md-offset-4">@Model.CandidateName Score Report</h2>
<dl class="col-md-offset-4 dl-horizontal">
    <dt>Date Started:</dt>
    <dd>@quizzes[0].TimeStarted</dd>
    <dt>Date Ended:</dt>
    <dd>@quizzes[quizzes.Count-1].TimeCompleted</dd>
</dl>

@foreach (var quiz in quizzes)
{
    <h3 style="margin-top:40px;">@quiz.Topic.Name</h3>
    
    <table class="table reportTable table-condensed" style="border:none;">

        <tr>
            <th>Question ID</th>
            <th>Question Time</th>
            <th>Answer</th>
        </tr>
        @foreach (var q in quiz.Questions)
        {
            var TopicQ = questions.SingleOrDefault(x => x.TopicQuestionId == q.TopicQuestionId);
            var TimeTaken = new TimeSpan();
            if (q.TimePresented != null && q.TimePresented != null)
            {
                var Presented = q.TimePresented.Value;
                var Answered = q.TimeAnswered.Value;
                TimeTaken = Answered.Subtract(Presented);
            }
            <tr>
                <td>@TopicQ.TopicQuestionId</td>
                <td>@TimeTaken.ToString(@"mm\:ss")</td>
                <td>
                    @if (string.Equals(q.Answer, TopicQ.CorrectAnswer, StringComparison.CurrentCultureIgnoreCase))
                    {

                       <span class="text-success glyphicon glyphicon-ok"></span>

                    }
                    else
                    {
                        <span class="text-danger glyphicon glyphicon-remove"></span>

                    }
                </td>

            </tr>
        }
    </table>
    var score= Math.Round((double)quiz.NumberCorrect / quiz.NumberOfQuestions, 3) * 100;
    Scores.Add(score);

  <h4>Score: @(Math.Round((double)quiz.NumberCorrect / quiz.NumberOfQuestions, 3) * 100)%</h4>

}

<h3 style="margin-top:40px;">Summary</h3>
<h4>Average Quiz Score: @Math.Round(Scores.Average(), 1)%</h4>
<h4>    Max Quiz Score: @Scores.Max()%</h4>
<h4>Min Quiz Score: @Scores.Min()%</h4>