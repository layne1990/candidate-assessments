
@model System.Collections.Generic.IEnumerable<CandidateAssessments.Models.TopicQuestion>

@using MarkdownSharp
@{
    ViewData["Title"] = "Questions";
    Markdown md = new Markdown();
}

<link rel="stylesheet" href="~/css/vs.css" />

<nav class="navbar navbar-full navbar-default" id="pageNav">
    <div class="container-fluid">
        <div class="col-lg-1 col-md-2">
            <span class="navbar-brand navbar-brand-custom">Questions</span>
        </div>

        <div class="col-lg-1 col-md-2 col-md-offset-1">
            <div class="nav navbar-btn">
                <a class="btn btn-primary" href="/Topic">Back to Topics</a>
            </div>
        </div>

        <form class="col-md-4 col-lg-4 col-md-offset-3 col-xs-6" method="get" asp-action="index">
            <div class="nav navbar-btn" role="search">
                <div class="input-group">
                    <input type="text" id="QuestionSearch" name="searchParam" class="form-control" style="max-width: 400px;" placeholder="Search">
                    <input type="hidden" name="TopicId" value="@ViewBag.TopicId" />
                    <span class="input-group-btn">
                        <button type="submit" id="QuestionSearchBtn" class="btn btn-default"><span class="glyphicon glyphicon-search"></span></button>
                    </span>
                </div>
            </div>
        </form>

        <div class="col-md-2 col-xs-2">
            <form class="nav navbar-btn navbar-right" method="get" asp-action="Create" asp-route-id="@ViewBag.TopicId">
                <button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-plus"></span>&nbsp;&nbsp;New Question</button>
            </form>
        </div>
    </div>
</nav>

<div class="card-deck-wrapper">
    <div class="card-deck row">

        @{

            foreach (var item in Model)
            {
                var AverageTime = "00:00";
                if (item.TimesAnswered > 0 && item.TotalTime.HasValue)
                {
                    AverageTime = System.TimeSpan.FromTicks(item.TotalTime.Value.Ticks / item.TimesAnswered).ToString(@"mm\:ss");
                }
                <div class="question col-xs-12 page-item">
                    <div class="card">
                        <h3 class='card-header card-default'>
                            <span class="cardHeader">@Html.DisplayFor(modelItem => item.Topic.Name)</span>
                            @if (!item.IsActive)
                            {
                                <span class="label label-danger">Inactive</span>
                            }
                            @if (item.DifficultyLevel == CandidateAssessments.Models.DifficultyLevels.Easy)
                            {
                                <span class="col-md-offset-7 text-success">@item.DifficultyLevel</span>
                            }
                            else if (item.DifficultyLevel == CandidateAssessments.Models.DifficultyLevels.Medium)
                            {
                                <span class="col-md-offset-7 text" style="color:#e7c713">@item.DifficultyLevel</span>
                            }
                            else
                            {
                                <span class="col-md-offset-7 text-danger">@item.DifficultyLevel</span>
                            }

                            <span class="pull-right">ID:@item.TopicQuestionId</span>
                        </h3>

                        @{
                            var percentA = (Math.Round((double)item.ASelected / (double)item.TimesAnswered, 2) * 100);
                            var percentB = (Math.Round((double)item.BSelected / (double)item.TimesAnswered, 2) * 100);
                            var percentC = (Math.Round((double)item.CSelected / (double)item.TimesAnswered, 2) * 100);
                            var percentD = (Math.Round((double)item.DSelected / (double)item.TimesAnswered, 2) * 100);
                        }
                        <div class="card-block">
                            <blockquote class="card-blockquote">
                                <!-- transforms to markdown -->
                                <p class="card-text">@Html.Raw(md.Transform(item.QuestionText))</p>
                                <ul class="list-group list-unstyled">
                                    @if (item.QuestionType == CandidateAssessments.Models.QuestionTypes.MultipleChoice)
                                    {
                                        <li class='container-fluid list-group-item @(item.CorrectAnswer == "A" ? "list-group-item-success" : "list-group-item-default")'>
                                            <span class="question_label">A)</span>
                                            <span class="col-xs-10 col-sm-9 col-md-10 question_text">@Html.Raw(md.Transform(item.ChoiceA))</span>
                                            <span class="badge navbar-right">@(double.IsNaN(percentA) ? 0 : percentA)%</span>
                                        </li>
                                        <li class='container-fluid list-group-item @(item.CorrectAnswer == "B" ? "list-group-item-success" : "list-group-item-default")'>
                                            <span class="question_label">B)</span>
                                            <span class="col-xs-10 col-sm-9 col-md-10 question_text">@Html.Raw(md.Transform(item.ChoiceB))</span>
                                            <span class="badge navbar-right">@(double.IsNaN(percentB) ? 0 : percentB)%</span>
                                        </li>
                                        <li class='container-fluid list-group-item @(item.CorrectAnswer == "C" ? "list-group-item-success" : "list-group-item-default")'>
                                            <span class="question_label">C)</span>
                                            <span class="col-xs-10 col-sm-9 col-md-10 question_text">@Html.Raw(md.Transform(item.ChoiceC))</span>
                                            <span class="badge navbar-right">@(double.IsNaN(percentC) ? 0 : percentC)%</span>
                                        </li>
                                        <li class='container-fluid list-group-item @(item.CorrectAnswer == "D" ? "list-group-item-success" : "list-group-item-default")'>
                                            <span class="question_label">D)</span>
                                            <span class="col-xs-10 col-sm-9 col-md-10 question_text">@Html.Raw(md.Transform(item.ChoiceD))</span>
                                            <span class="badge navbar-right">@(double.IsNaN(percentD) ? 0 : percentD)%</span>
                                        </li>
                                    }
                                    else if (item.QuestionType == CandidateAssessments.Models.QuestionTypes.TrueFalse)
                                    {

                                        <li class='container-fluid list-group-item @(item.CorrectAnswer == "T" ? "list-group-item-success" : "list-group-item-default")'>
                                            <span class="question_label"></span>
                                            <span class="col-xs-10 col-sm-9 col-md-10 question_text">True</span>
                                            <span class="badge navbar-right">@(double.IsNaN(percentA) ? 0 : percentA)%</span>
                                        </li>
                                        <li class='container-fluid list-group-item @(item.CorrectAnswer == "F" ? "list-group-item-success" : "list-group-item-default")'>
                                            <span class="question_label"></span>
                                            <span class="col-xs-10 col-sm-9 col-md-10 question_text">False</span>
                                            <span class="badge navbar-right">@(double.IsNaN(percentB) ? 0 : percentB)%</span>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class='container-fluid list-group-item list-group-item-success'>
                                            <span class="question_label"></span><span class="badge navbar-right">@(double.IsNaN(percentA) ? 0 : percentA)%</span> <span class="col-md-9 question_text">@Html.DisplayFor(modelItem => item.CorrectAnswer)</span>
                                        </li>

                                    }
                                </ul>
                            </blockquote>
                        </div>
                        <div class="card-footer">
                            <div class="row">

                                <div class="col-xs-12">
                                    <span class="pull-left" style="margin-top:5px">Average Time to Answer: @AverageTime</span>
                                    <span class="pull-right">
                                        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.TopicQuestionId">Edit</a>&nbsp;
                                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.TopicQuestionId">Delete</a>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                            }
        }
    </div>
</div>

<pager additional-parameters="searchParam=@ViewBag.search&TopicId=@ViewBag.TopicId"
       current-page="@ViewBag.page"
       link-url="/TopicQuestions/"
       total-pages="@ViewBag.pages"></pager>

<script src="~/lib/highlight/highlight.pack.js"></script>
<script>
    $(document).ready(function () {
        $('code').each(function (i, block) {
            hljs.highlightBlock(block);
        });
    });
</script>