
@model System.Collections.Generic.IEnumerable<CandidateAssessments.Models.TopicQuestion>

@{
    ViewData["Title"] = "Index";
}

<nav class="navbar navbar-full navbar-default" id="pageNav">
    <div class="container-fluid">
        <div class="col-lg-1 col-md-2">
            <span class="navbar-brand navbar-brand-custom">Questions</span>
        </div>

        <div class="col-lg-1 col-md-2 col-md-offset-1">
            <div class="nav navbar-btn">
                <a class="btn btn-primary" href="/Topic">Back to Topics</a>
            </div>
        </div>

        <form class="col-md-4 col-lg-4 col-md-offset-3 col-xs-6" method="get" asp-action="index">
            <div class="nav navbar-btn" role="search">
                <div class="input-group">
                    <input type="text" id="QuestionSearch" name="searchParam" class="form-control" style="max-width: 400px;" placeholder="Search">
                    <input type="hidden" name="TopicId" value="@ViewBag.TopicId" />
                    <span class="input-group-btn">
                        <button type="submit" id="QuestionSearchBtn" class="btn btn-default"><span class="glyphicon glyphicon-search"></span></button>
                    </span>
                </div>
            </div>
        </form>

        <div class="col-md-2 col-xs-2">
            <form class="nav navbar-btn navbar-right" method="get" asp-action="Create" asp-route-id="@ViewBag.TopicId">
                <button type="submit" class="btn btn-danger"><span class="glyphicon glyphicon-plus"></span>&nbsp;&nbsp;Create New</button>
            </form>
        </div>
    </div>
</nav>

<div class="card-deck-wrapper">
    <div class="card-deck row">
        
        @{
                var count = (ViewBag.page-1)*5;
                foreach (var item in Model)
                {
                    var AverageTime="00:00";
                    if (item.TimesAnswered > 0)
                    {
                         AverageTime = System.TimeSpan.FromTicks(item.TotalTime.Value.Ticks / item.TimesAnswered).ToString(@"mm\:ss");
                    }
                <div class="question col-xs-12 page-item">
                    <div class="card">
                        @* Handles inactive cards headers being red *@
                        <h3 class='card-header @(item.IsActive ? "card-default" : "card-inactive")'>
                            <span class="cardHeader">@Html.DisplayFor(modelItem => item.Topic.Name)</span>
                       
                            <span class="pull-right">#@(++count)</span>
                        </h3>
                        @{
                            var percentA = (Math.Round((double)item.ASelected / (double)item.TimesAnswered, 2) * 100);
                            var percentB = (Math.Round((double)item.BSelected / (double)item.TimesAnswered, 2) * 100);
                            var percentC = (Math.Round((double)item.CSelected / (double)item.TimesAnswered, 2) * 100);
                            var percentD = (Math.Round((double)item.DSelected / (double)item.TimesAnswered, 2) * 100);
                        }
                        <div class="card-block">
                            <blockquote class="card-blockquote">
                                <p class="card-text">@Html.DisplayFor(modelItem => item.QuestionText)</p>
                                <ul class="list-group list-unstyled">
                                    @if (item.QuestionType == CandidateAssessments.Models.QuestionTypes.MultipleChoice)
                                    {
                                        <li class='container-fluid list-group-item @(item.CorrectAnswer == "A" ? "list-group-item-success" : "list-group-item-default")'>
                                            <span class="question_label">A)</span>
                                            <span class="col-xs-10 col-sm-9 col-md-10 question_text">@Html.DisplayFor(modelItem => item.ChoiceA)</span>
                                            <span class="badge navbar-right">@(double.IsNaN(percentA) ? 0 : percentA)%</span>
                                        </li>
                                        <li class='container-fluid list-group-item @(item.CorrectAnswer == "B" ? "list-group-item-success" : "list-group-item-default")'>
                                            <span class="question_label">B)</span>
                                            <span class="col-xs-10 col-sm-9 col-md-10 question_text">@Html.DisplayFor(modelItem => item.ChoiceB)</span>
                                            <span class="badge navbar-right">@(double.IsNaN(percentB) ? 0 : percentB)%</span>
                                        </li>
                                        <li class='container-fluid list-group-item @(item.CorrectAnswer == "C" ? "list-group-item-success" : "list-group-item-default")'>
                                            <span class="question_label">C)</span>
                                            <span class="col-xs-10 col-sm-9 col-md-10 question_text">@Html.DisplayFor(modelItem => item.ChoiceC)</span>
                                            <span class="badge navbar-right">@(double.IsNaN(percentC) ? 0 : percentC)%</span>
                                        </li>
                                        <li class='container-fluid list-group-item @(item.CorrectAnswer == "D" ? "list-group-item-success" : "list-group-item-default")'>
                                            <span class="question_label">D)</span>
                                            <span class="col-xs-10 col-sm-9 col-md-10 question_text">@Html.DisplayFor(modelItem => item.ChoiceD)</span>
                                            <span class="badge navbar-right">@(double.IsNaN(percentD) ? 0 : percentD)%</span>
                                        </li>
                                    }
                                    else if (item.QuestionType == CandidateAssessments.Models.QuestionTypes.TrueFalse)
                                    {

                                        <li class='container-fluid list-group-item @(item.CorrectAnswer == "A" ? "list-group-item-success" : "list-group-item-default")'>
                                            <span class="question_label"></span>
                                            <span class="col-xs-10 col-sm-9 col-md-10 question_text">@Html.DisplayFor(modelItem => item.ChoiceA)</span>
                                            <span class="badge navbar-right">@(double.IsNaN(percentA) ? 0 : percentA)%</span>
                                        </li>
                                        <li class='container-fluid list-group-item @(item.CorrectAnswer == "B" ? "list-group-item-success" : "list-group-item-default")'>
                                            <span class="question_label"></span>
                                            <span class="col-xs-10 col-sm-9 col-md-10 question_text">@Html.DisplayFor(modelItem => item.ChoiceB)</span>
                                            <span class="badge navbar-right">@(double.IsNaN(percentB) ? 0 : percentB)%</span>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class='container-fluid list-group-item list-group-item-success'>
                                            <span class="question_label"></span><span class="badge navbar-right">@(double.IsNaN(percentA) ? 0 : percentA)%</span> <span class="col-md-9 question_text">@Html.DisplayFor(modelItem => item.CorrectAnswer)</span>
                                        </li>

                                    }
                                </ul>
                            </blockquote>
                        </div>
                        <div class="card-footer">
                            <div class="row">
                              
                                <div class="col-xs-12">
                                    <span class="pull-left" style="margin-top:5px">Average Time to Answer: @AverageTime</span>
                                    <span class="pull-right">
                                        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.TopicQuestionId">Edit</a>&nbsp;
                                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.TopicQuestionId">Delete</a>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                            }
        }
    </div>
</div>
@{var pages = Math.Ceiling(ViewBag.count / 5.0);}
@if (pages > 1)
{
    <ul class="pagination pagination-lg">

        <li><a id="leftArrow" href="/TopicQuestions/?page=1&searchParam=@ViewBag.search&TopicId=@ViewBag.TopicId">&laquo;</a></li>
        @{var back = (ViewBag.page > 1) ? ViewBag.page - 1 : 1; }
        <li><a href="/TopicQuestions/?page=@back&searchParam=@ViewBag.search&TopicId=@ViewBag.TopicId">&lsaquo;</a></li>
        @{
            var DisplayDots = true;
            var start = 1;
            var end = pages;
            if (ViewBag.page < 4)
            {
                if (pages > 5)
                {
                    end = 5;
                }
                else
                {
                    DisplayDots = false;

                }

            }
            else
            {
                if (ViewBag.Page > (pages - 3))
                {
                    start = (int)pages - 4;
                    DisplayDots = false;

                }
                else {
                    start = ViewBag.page - 2;
                    end = ViewBag.page + 2;
                }
            }


        }
        @for (int i = start; i <= end; i++)
        {
            @if (ViewBag.page == i)
            {
                <li class="active"><span>@i</span></li>

            }
            else {
                <li><a href="/TopicQuestions/?page=@i&searchParam=@ViewBag.search&TopicId=@ViewBag.TopicId">@i</a></li>
            }

        }
        @{var next = (ViewBag.page < pages) ? ViewBag.page + 1 : pages;}
        @if (DisplayDots)
        {
            var skip = next + 4;
            if (skip > pages)
            {
                skip = pages;

            }

            <li><a href="/TopicQuestions/?page=@skip &searchParam=@ViewBag.search&TopicId=@ViewBag.TopicId">...</a></li>
        }
        <li><a href="/TopicQuestions/?page=@next&searchParam=@ViewBag.search&TopicId=@ViewBag.TopicId">&rsaquo;</a></li>
        <li><a id="rightArrow" href="/TopicQuestions/?page=@pages&searchParam=@ViewBag.search&TopicId=@ViewBag.TopicId">&raquo;</a></li>
    </ul>

}



<script>
    $(function () {
        var names = [];
        @foreach (var item in ViewBag.names)
        {
            var label = (item.QuestionText.Length < 30) ? item.QuestionText : item.QuestionText.Substring(0, 30) + "...";
        <text>names.push({ label: '@label', value: "@item.QuestionText" });
        if (names.indexOf('@item.Topic.Name') == -1)
            names.push('@item.Topic.Name');
        </text>

    }

        $("#QuestionSearch").autocomplete({
            source: names
        });
    })
</script>