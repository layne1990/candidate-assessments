@model CandidateAssessments.Models.TopicQuestion
@using CandidateAssessments.Models
@using System.ComponentModel.DataAnnotations;
@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TopicQuestion</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TopicQuestionId)

        <div class="form-group">
            @Html.LabelFor(model => model.QuestionType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{

                    Func<object, string> GetDisplayName = o =>
                    {
                        var result = null as string;
                        var display = o.GetType()
                                       .GetMember(o.ToString()).First()
                                       .GetCustomAttributes(false)
                                       .OfType<DisplayAttribute>()
                                       .LastOrDefault();
                        if (display != null)
                        {
                            result = display.GetName();
                        }

                        return result ?? o.ToString();
                    };

                    var values = Enum.GetValues(typeof(QuestionTypes)).Cast<object>()
                                     .Select(v => new SelectListItem
                                     {
                                         Selected = v.Equals(Model),
                                         Text = GetDisplayName(v),
                                         Value = v.ToString()
                                     });
                }

                @Html.DropDownListFor(model => model.QuestionType, values, new { htmlAttributes = new { @class = "form-control" } })


                @Html.ValidationMessageFor(model => model.QuestionType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Topic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor((model => model.TopicId), new SelectList(ViewBag.TopicList, "TopicId", "Name"), new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.TopicId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.QuestionText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CorrectAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CorrectAnswer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CorrectAnswer, "", new { @class = "text-danger" })
            </div>
        </div>
        <div id="MCQuestions">
            <div class="form-group">
                @Html.LabelFor(model => model.ChoiceA, htmlAttributes: new { @class = "control-label col-md-2", @id = "trueLabel" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ChoiceA, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ChoiceA, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ChoiceB, htmlAttributes: new { @class = "control-label col-md-2", @id = "falseLabel" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ChoiceB, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ChoiceB, "", new { @class = "text-danger" })
                </div>
            </div>
            <div id="offForTrueFalse">
                <div class="form-group">
                    @Html.LabelFor(model => model.ChoiceC, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ChoiceC, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ChoiceC, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ChoiceD, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ChoiceD, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ChoiceD, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save Changes" class="btn btn-default" />
            </div>
        </div>
    </div>
                    }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
}
