@model CandidateAssessments.Models.TopicQuestion
@using MarkdownSharp

@{
    ViewData["Title"] = "Details";
    Markdown md = new Markdown();
}

<link rel="stylesheet" href="~/css/vs.css" />

<h2>Details</h2>

<hr />

<div class="question col-xs-12 page-item">
    <div class="card">
        <h3 class='card-header card-default'>
            <span class="cardHeader">@Html.DisplayFor(modelItem => Model.Topic.Name)</span>
            @if (!Model.IsActive)
            {
                <span class="label label-danger">Inactive</span>
            }
            @if (Model.DifficultyLevel == CandidateAssessments.Models.DifficultyLevels.Easy)
            {
                <span class="col-md-offset-7 text-success">@Model.DifficultyLevel</span>
            }
            else if (Model.DifficultyLevel == CandidateAssessments.Models.DifficultyLevels.Medium)
            {
                <span class="col-md-offset-7 text" style="color:#e7c713">@Model.DifficultyLevel</span>
            }
            else
            {
                <span class="col-md-offset-7 text-danger">@Model.DifficultyLevel</span>
            }

            <span class="pull-right">ID:@Model.TopicQuestionId</span>
        </h3>

        <div class="card-block">
            <blockquote class="card-blockquote">
                <!-- transforms to markdown -->
                <p class="card-text">@Html.Raw(md.Transform(Model.QuestionText))</p>
                <ul class="list-group list-unstyled">
                    @if (Model.QuestionType == CandidateAssessments.Models.QuestionTypes.MultipleChoice)
                    {
                        <li class='container-fluid list-group-item @(Model.CorrectAnswer == "A" ? "list-group-item-success" : "list-group-item-default")'>
                            <span class="question_label">A)</span>
                            <span class="col-xs-10 col-sm-9 col-md-10 question_text">@Html.Raw(md.Transform(Model.ChoiceA))</span>
                        </li>
                        <li class='container-fluid list-group-item @(Model.CorrectAnswer == "B" ? "list-group-item-success" : "list-group-item-default")'>
                            <span class="question_label">B)</span>
                            <span class="col-xs-10 col-sm-9 col-md-10 question_text">@Html.Raw(md.Transform(Model.ChoiceB))</span>
                        </li>
                        <li class='container-fluid list-group-item @(Model.CorrectAnswer == "C" ? "list-group-item-success" : "list-group-item-default")'>
                            <span class="question_label">C)</span>
                            <span class="col-xs-10 col-sm-9 col-md-10 question_text">@Html.Raw(md.Transform(Model.ChoiceC))</span>
                        </li>
                        <li class='container-fluid list-group-item @(Model.CorrectAnswer == "D" ? "list-group-item-success" : "list-group-item-default")'>
                            <span class="question_label">D)</span>
                            <span class="col-xs-10 col-sm-9 col-md-10 question_text">@Html.Raw(md.Transform(Model.ChoiceD))</span>
                        </li>
                    }
                    else if (Model.QuestionType == CandidateAssessments.Models.QuestionTypes.TrueFalse)
                    {

                        <li class='container-fluid list-group-item @(Model.CorrectAnswer == "T" ? "list-group-item-success" : "list-group-item-default")'>
                            <span class="question_label"></span>
                            <span class="col-xs-10 col-sm-9 col-md-10 question_text">True</span>
                        </li>
                        <li class='container-fluid list-group-item @(Model.CorrectAnswer == "F" ? "list-group-item-success" : "list-group-item-default")'>
                            <span class="question_label"></span>
                            <span class="col-xs-10 col-sm-9 col-md-10 question_text">False</span>
                        </li>
                    }
                    else
                    {
                        <li class='container-fluid list-group-item list-group-item-success'>
                            <span class="question_label"></span>
                            <span class="col-md-9 question_text">@Html.DisplayFor(modelItem => Model.CorrectAnswer)</span>
                        </li>

                    }
                </ul>
            </blockquote>
        </div>
        <div class="card-footer">
            <div class="row">

            </div>
        </div>
    </div>
</div>

    <p>
        @Html.ActionLink("Back to List", "Index", new { TopicId = Model.TopicId })
    </p>
